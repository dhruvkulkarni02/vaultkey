name: Build VaultKey Executables

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        include:
          - os: windows-latest
            artifact_name: VaultKey.exe
            asset_name: VaultKey-Windows
          - os: macos-latest
            artifact_name: VaultKey
            asset_name: VaultKey-macOS

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install ALL dependencies
      run: |
        python -m pip install --upgrade pip
        pip install cryptography
        pip install click
        pip install tabulate
        pip install pyperclip
        pip install pyinstaller
    
    - name: Create runner script
      shell: bash
      run: |
        cat > run_vaultkey.py << 'EOFPY'
        #!/usr/bin/env python3
        import sys
        import os
        
        # Add current directory to path
        sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
        
        # Import everything to ensure it's bundled
        import cryptography
        import cryptography.fernet
        import click
        import tabulate
        import pyperclip
        
        # Import our modules
        import vaultkey
        from vaultkey.cli import cli
        
        if __name__ == '__main__':
            cli()
        EOFPY
    
    - name: Build with PyInstaller (Simple)
      shell: bash
      run: |
        pyinstaller --onefile \
          --name="${{ matrix.artifact_name }}" \
          --paths=. \
          --collect-all=cryptography \
          --collect-all=click \
          run_vaultkey.py
    
    - name: Test executable
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          ./dist/${{ matrix.artifact_name }} --version || echo "Version check failed, continuing..."
        else
          chmod +x ./dist/${{ matrix.artifact_name }}
          ./dist/${{ matrix.artifact_name }} --version || echo "Version check failed, continuing..."
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: dist/${{ matrix.artifact_name }}

  package:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create distribution packages
      run: |
        # Setup directories
        mkdir -p VaultKey/{Windows,Mac,Documentation}
        
        # Copy executables
        cp VaultKey-Windows/VaultKey.exe VaultKey/Windows/
        cp VaultKey-macOS/VaultKey VaultKey/Mac/
        chmod +x VaultKey/Mac/VaultKey
        
        # Create launchers
        cat > VaultKey/Windows/START-VAULTKEY.bat << 'EOF'
        @echo off
        title VaultKey Password Manager
        cls
        echo  ========================================
        echo      VaultKey Password Manager
        echo  ========================================
        echo.
        VaultKey.exe interactive
        if errorlevel 1 (
            echo.
            echo Press any key to exit...
            pause > nul
        )
        EOF
        
        cat > VaultKey/Mac/START-VAULTKEY.command << 'EOF'
        #!/bin/bash
        clear
        echo "========================================"
        echo "    VaultKey Password Manager"
        echo "========================================"
        echo
        cd "$(dirname "$0")"
        ./VaultKey interactive
        EOF
        chmod +x VaultKey/Mac/START-VAULTKEY.command
        
        # Create simple instructions
        cat > VaultKey/README-FIRST.txt << 'EOF'
        VAULTKEY PASSWORD MANAGER
        =========================
        
        TO START:
        
        WINDOWS → Double-click "START-VAULTKEY.bat"
        MAC → Double-click "START-VAULTKEY.command"
        
        If Mac shows security warning:
        - Right-click the file
        - Choose "Open"
        - Click "Open" again
        
        FIRST TIME:
        1. Create a master password
        2. REMEMBER IT! (write it down)
        3. Start saving passwords
        
        DAILY USE:
        - Add password: Press 2
        - Find password: Press 1
        - Copy password: Press 4
        - Exit: Press 0
        EOF
        
        # Create packages
        zip -r VaultKey-Complete.zip VaultKey/
        cd VaultKey/Windows && zip -r ../../VaultKey-Windows.zip . && cd ../..
        cd VaultKey/Mac && zip -r ../../VaultKey-Mac.zip . && cd ../..
    
    - name: Upload packages
      uses: actions/upload-artifact@v4
      with:
        name: VaultKey-All-Packages
        path: |
          VaultKey-Complete.zip
          VaultKey-Windows.zip
          VaultKey-Mac.zip
        retention-days: 90
